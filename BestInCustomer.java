/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.demomain;

import static com.mycompany.demomain.ViewReports.RemoveDuplicates;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dilsh
 */
public class BestInCustomer extends javax.swing.JFrame {

    /**
     * Creates new form BestInCustomer
     */
    public BestInCustomer() {
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btnback = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tblbcustomer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Best In Customer");

        Btnback.setBackground(new java.awt.Color(255, 0, 0));
        Btnback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Btnback.setForeground(new java.awt.Color(255, 255, 255));
        Btnback.setText("Back");
        Btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnbackActionPerformed(evt);
            }
        });

        Tblbcustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "QTY", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tblbcustomer.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TblbcustomerAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(Tblbcustomer);
        if (Tblbcustomer.getColumnModel().getColumnCount() > 0) {
            Tblbcustomer.getColumnModel().getColumn(0).setResizable(false);
            Tblbcustomer.getColumnModel().getColumn(1).setResizable(false);
            Tblbcustomer.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(Btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnbackActionPerformed
        dispose();
        ViewReports AA =new ViewReports();
        AA.setVisible(true);
    }//GEN-LAST:event_BtnbackActionPerformed

    private void TblbcustomerAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TblbcustomerAncestorAdded

    }//GEN-LAST:event_TblbcustomerAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BestInCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BestInCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BestInCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BestInCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BestInCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btnback;
    private javax.swing.JTable Tblbcustomer;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    private void load() {
     
    DefaultTableModel mode2 = (DefaultTableModel) Tblbcustomer.getModel();
    
            String[] noDuplicate = {Fashionshop.list.get(0).getTelephone()};
        for (int i = 0; i < Fashionshop.list.size(); i++) {
            boolean isunique = false;
            loop:
            for (int j = 0; j < noDuplicate.length; j++) {

                if (Fashionshop.list.get(i).getTelephone().equals(noDuplicate[j])) {
                    isunique = false;
                    break loop;
                } else {
                    isunique = true;
                }

            }
            if (isunique) {
                String[] temp = new String[noDuplicate.length + 1];
                for (int k = 0; k < noDuplicate.length; k++) {
                    temp[k] = noDuplicate[k];
                }
                temp[temp.length - 1] = Fashionshop.list.get(i).getTelephone();
                noDuplicate = temp;
            }
        }
                int [] tempQts2 = new int[noDuplicate.length];
         int[] tempAmount3 = new int[noDuplicate.length];
        int fullQuantity = 0;
        int fullAmount = 0;

        for (int i = 1; i < noDuplicate.length; i++) {

            for (int j = 0; j < Fashionshop.list.size(); j++) {

                if (Fashionshop.list.get(j).getTelephone().equals(noDuplicate[i])) {
                    fullQuantity += Fashionshop.list.get(j).getQts();
                    fullAmount += Fashionshop.list.get(j).getAmount();
                }
            }

            tempQts2[i] = fullQuantity;
            tempAmount3[i] = fullAmount;
        }

        for (int i = 0; i < noDuplicate.length - 1; i++) {
            for (int j = 0; j < noDuplicate.length - 1; j++) {

                if (tempAmount3[j] < tempAmount3[j + 1]) {
                    int tempA = tempAmount3[j];
                    tempAmount3[j] = tempAmount3[j + 1];
                    tempAmount3[j + 1] = tempA;

                    int tempB = tempQts2[j];
                    tempQts2[j] = tempQts2[j + 1];
                    tempQts2[j + 1] = tempB;

                    String tempC = noDuplicate[j];
                    noDuplicate[j] = noDuplicate[j + 1];
                    noDuplicate[j + 1] = tempC;
                }
            }
        }

        mode2.setRowCount(0);
        for (int i = 0; i < noDuplicate.length; i++) {
            mode2.addRow(new Object[]{noDuplicate[i], tempQts2[i], tempAmount3[i]});  
        }

    
    }

}
